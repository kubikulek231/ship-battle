@using ship_battle.Data
    
 <div class="game">
     <div class="header">
        <h1>
        ShipBattle
        </h1>
    </div>
    <div class="game-layout">
        <div class="game-board-status-panel">
            @if (game.GameState == Game.GameStateType.Setup)
            {
                <h2 id="h2-white">
                    Fleet setup
                </h2>
                <div class="setup-panel">
                @if (game.IsEveryFriendlyShipAdded() == Ship.ShipType.None)
                {
                    <h2 id="h2-setup">
                        Ready!
                    </h2>
                }
                @if (game.IsEveryFriendlyShipAdded() != Ship.ShipType.None)
                {
                    <h2 id="h2-setup">
                        Next ship
                    </h2>
                    Ship.ShipType nextShip = game.IsEveryFriendlyShipAdded();
                    string nextShipName = Ship.Name(nextShip);
                    <div class="status-ship add @nextShipName">
                        <h3 id="add-ship"> @nextShipName</h3>
                    </div>
                }
                </div>
            }
            @if (game.GameState == Game.GameStateType.Setup)
            {
                string state = "";
                <div class="button-panel">
                    @if (game.IsEveryFriendlyShipAdded() != Ship.ShipType.None)
                    {
                        state = "setup";
                    }
                    <div class="btn @state" @onclick="@(e => game.StartGame())"><h3 id="add-ship">Start</h3></div>
                    <div class="btn" @onclick="@(e => game.SetupRotate = !game.SetupRotate)"><h3 id="add-ship">Rotate</h3></div>
                    <div class="btn" @onclick="@(e => game.RemoveLastFriendlyShip())"><h3 id="add-ship">Remove</h3></div>
                    <div class="btn" @onclick="@(e => game.ResetSetup())"><h3 id="add-ship">Reset</h3></div>
                    <div class="btn" @onclick="@(e => game.RandomSetup())"><h3 id="add-ship">Random</h3></div>
                </div>
            }
            @if (game.GameState == Game.GameStateType.Ready || game.GameState == Game.GameStateType.GameOver)
            {
                <h2 id="h2-white">
                    Game
                </h2>
                <div class="friendly-fleet">
                <h2 id="h2-friendly">
                Friendly fleet
                </h2>
            
                @foreach (Ship ship in game.FriendlyBoard.Ships)
                {
                    string status = "sunk";
                    if (!ship.IsSunk())
                    {
                        status = "";
                    }
                    <div class="status-ship friendly @ship.Name() @status">
                        <h3 id="@status"> @ship.Name()</h3>
                    </div>
                }
                </div>
                <div class="enemy-fleet">
                <h2 id="h2-enemy">
                Enemy fleet
                </h2>

                @foreach (Ship ship in game.EnemyBoard.Ships)
                {
                    string status = "sunk";
                    if (!ship.IsSunk())
                    {
                        status = "";
                    }
                    <div class="status-ship enemy @ship.Name() @status">
                        <h3 id="@status"> @ship.Name()</h3>
                    </div>
                }
                </div>
            }
        </div>
        <div class="game-board-spacer"></div>
        <div class="game-board-grid friendly">
            @for (int col = 0; col < 10; col++)
            {
                @for (int row = 0; row < 10; row++)
                {
                    var temp_col = col + 1;
                    var temp_row = row + 1;
                    string hover = "";
                    if (game.IsBoardSetupHover(temp_col - 1, temp_row - 1))
                    {
                        hover = "hover";
                    }
                    <div class="game-board-square friendly @hover" style="--origin-col: @temp_col; --origin-row: @temp_row"
                  @onmouseover="@(e => game.BoardSetupHover(temp_col-1, temp_row-1))" @onmouseleave="@(e => game.BoardSetupReset())">
                    </div>
                }
            }
            @foreach (Ship ship in game.FriendlyBoard.Ships)
            {
                <div class="ship friendly @ship.Name().ToLower()" style="--origin-col: @ship.OriginCol1Based;
                --origin-row: @ship.OriginRow1Based; --end-col: @ship.EndCol1Based; --end-row: @ship.EndRow1Based"></div>
            }
            @for (int col = 0; col < 10; col++)
            {
                @for (int row = 0; row < 10; row++)
                {
                    string square_name = PlayerBoard.GetSquareTypeName(game.FriendlyBoard.HitRecord[col, row]).ToLower();
                    var temp_col = col + 1;
                    var temp_row = row + 1;
                    if (square_name == "miss")
                    {
                        <div class="game-board-square friendly @square_name" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                    }
                    if (square_name == "hit")
                    {
                        <div class="game-board-square @square_name" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                        <div class="game-board-square hit-circle" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                    }
                }
            }
        </div>
        <div class="game-board-spacer"></div>
        <div class="game-board-grid">

            @for (int col = 0; col < 10; col++)
            {
                @for (int row = 0; row < 10; row++)
                {
                    var temp_col = col + 1;
                    var temp_row = row + 1;

                    <div class="game-board-square enemy" style="--origin-col: @temp_col; --origin-row: @temp_row"
                 @onclick="@(e => game.BoardClick(temp_col-1, temp_row-1, game.EnemyBoard))">
                    </div>
                }
            }
            @foreach (Ship ship in game.EnemyBoard.Ships)
            {
                if (!ship.IsSunk())
                {
                    continue;
                }
                <div class="ship enemy @ship.Name().ToLower()" style="--origin-col: @ship.OriginCol1Based;
                --origin-row: @ship.OriginRow1Based; --end-col: @ship.EndCol1Based; --end-row: @ship.EndRow1Based"></div>
            }
            @for (int col = 0; col < 10; col++)
            {
                @for (int row = 0; row < 10; row++)
                {
                    string square_name = PlayerBoard.GetSquareTypeName(game.EnemyBoard.HitRecord[col, row]).ToLower();
                    var temp_col = col + 1;
                    var temp_row = row + 1;
                    if (square_name == "miss")
                    {
                        <div class="game-board-square enemy @square_name" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                    }
                    if (square_name == "hit")
                    {
                        <div class="game-board-square @square_name" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                        <div class="game-board-square hit-circle" style="--origin-col: @temp_col; --origin-row: @temp_row"></div>
                    }
                }
            }
        </div>
    </div>
    @if (game.GameState == Game.GameStateType.GameOver)
    {
        string gameOverMessage = "You won!";
        game.EvaluateGameOver();
        <div class="game-over-window">
            <div class="game-over-box">
                <div class="game-over">
                @if (game.GameOver == Game.GameOverType.Lose) { gameOverMessage = "You lost!"; }
                @if (game.GameOver == Game.GameOverType.Draw) { gameOverMessage = "Draw!"; }
                <h1 id="@game.GetGameOverString()">
                    @gameOverMessage
                </h1>
                <div class="play-again" @onclick="@(e => game.ResetGame())"><h3 id="add-ship">Play again</h3></div>
                </div>
            </div>
        </div>
    }
</div>

@code {

    Game game = new Game();
}
